---
- name: Initialize Thingsboard
  hosts: localhost
  vars:
    thingsboard_url: "{{ lookup('env', 'THINGSBOARD_URL') }}"
    sysadmin_username: "{{ lookup('env', 'SYSADMIN_USERNAME') }}"
    sysadmin_password: "{{ lookup('env', 'SYSADMIN_PASSWORD') }}"
    token_signing_key: "{{ lookup('env', 'JWT_SIGNING_KEY') }}"
    tenant_id: "{{ lookup('env', 'TENANT_ID') }}"
    tenant_name: "{{ lookup('env', 'TENANT_NAME') }}"
    tenant_admin_user: "{{ lookup('env', 'TENANT_ADMIN_USER') }}"
    keycloak_url: "{{ lookup('env', 'KEYCLOAK_URL') }}"
    keycloak_realm: "{{ lookup('env', 'KEYCLOAK_REALM') }}"
    keycloak_username: "{{ lookup('env', 'KEYCLOAK_USERNAME') }}"
    keycloak_password: "{{ lookup('env', 'KEYCLOAK_PASSWORD') }}"
    thing_desciber_kafka_servers: "{{ lookup('env', 'THING_DESCRIBER_KAFKA_SERVERS') }}"
    oauth2_endpoint_scheme: "{{ lookup('env', 'OAUTH2_SCHEME') }}"
    oauth2_domain_name: "{{ lookup('env', 'OAUTH2_DOMAIN_NAME') }}"
    oauth2_customer_mapper_url: "{{ lookup('env', 'OAUTH2_CUSTOM_MAPPER_URL') }}"
    oauth2_client_id: "{{ lookup('env', 'OAUTH2_CLIENT_ID') }}"
    oauth2_client_secret: "{{ lookup('env', 'OAUTH2_CLIENT_SECRET') }}"
    oauth2_authorization_uri: "{{ lookup('env', 'OAUTH2_AUTHORIZATION_URI') }}"
    oauth2_access_token_uri: "{{ lookup('env', 'OAUTH2_ACCESS_TOKEN_URI') }}"
    oauth2_user_info_uri: "{{ lookup('env', 'OAUTH2_USER_INFO_URI') }}"
    oauth2_jwk_uri: "{{ lookup('env', 'OAUTH2_JWK_URI') }}"
    oauth2_login_button_label: "{{ lookup('env', 'OAUTH2_LOGIN_BUTTON_LABEL') }}"
    oauth2_user_creation: "{{ lookup('env', 'OAUTH2_USER_CREATION') }}"
    oauth2_activate_user: "{{ lookup('env', 'OAUTH2_ACTIVATE_USER') }}"
  tasks:
    - name: Authenticate and get JWT token
      uri:
        url: "{{ thingsboard_url }}/api/auth/login"
        method: POST
        body_format: json
        body: 
          username: "{{ sysadmin_username }}"
          password: "{{ sysadmin_password }}"
        return_content: yes
      register: auth_response

    - name: Extract JWT token
      set_fact:
        jwt_token: "{{ auth_response.json.token }}"
      when: auth_response.json.token is defined

    - name: Change Token Signing Key
      uri:
        url: "{{ thingsboard_url }}/api/admin/jwtSettings"
        method: POST
        body_format: json
        body: 
          tokenSigningKey: "{{ token_signing_key | b64encode }}"
          tokenExpirationTime: 9000
          refreshTokenExpTime: 604800
          tokenIssuer: "thingsboard.io"
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: change_key_response
      when: jwt_token is defined

    - name: Fetching OAuth2 Settings
      uri:
        url: "{{ thingsboard_url }}/api/oauth2/config"
        method: GET
        headers:
            X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: oauth2_settings_response

    - name: Check OAuth2 Settings Exists
      set_fact:
        oauth2_settings_exists: "{{ oauth2_settings_response.content | from_json | json_query(filter_domain_infos) | length > 0 }}"
        oauth2_params_infos: "{{ oauth2_settings_response.content | from_json | json_query(get_oauth2_params_infos) }}"
      vars:
        filter_domain_infos: "oauth2ParamsInfos[*].domainInfos[?name==`{{ oauth2_domain_name }}`]"
        get_oauth2_params_infos: "oauth2ParamsInfos[*]"

    - name: Creating Endpoint Information
      set_fact:
        new_oauth2_endpoint:
          domainInfos:
          - scheme: "{{ oauth2_endpoint_scheme }}"
            name: "{{ oauth2_domain_name }}"
          mobileInfos: []
          clientRegistrations:
          - mapperConfig:
              allowUserCreation: "{{ oauth2_user_creation | bool }}"
              activateUser: "{{ oauth2_activate_user | bool }}"
              type: CUSTOM
              custom:
                url: "{{ oauth2_customer_mapper_url }}"
                sendToken: true
            clientId: "{{ oauth2_client_id }}"
            clientSecret: "{{ oauth2_client_secret }}"
            authorizationUri: "{{ oauth2_authorization_uri }}"
            accessTokenUri: "{{ oauth2_access_token_uri }}"
            userInfoUri: "{{ oauth2_user_info_uri }}"
            jwkSetUri: "{{ oauth2_jwk_uri }}"
            scope:
            - email
            - openid
            - profile
            userNameAttributeName: email
            clientAuthenticationMethod: POST
            loginButtonLabel: "{{ oauth2_login_button_label }}"
            loginButtonIcon:
            platforms: []
            additionalInfo:
              providerName: Custom
      when: oauth2_settings_exists == false

    - name: Add OAuth2 Configuration
      vars:
        combined_oauth2_params_infos: "{{ oauth2_params_infos + [new_oauth2_endpoint] }}"
      uri:
        url: "{{ thingsboard_url }}/api/oauth2/config"
        method: POST
        body_format: json
        body: 
          enabled: true
          oauth2ParamsInfos: "{{ combined_oauth2_params_infos }}"
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      when: oauth2_settings_exists == false

    - name: Get Tenants
      uri:
        url: "{{ thingsboard_url }}/api/tenantInfos?page=0&pageSize=1&textSearch={{ tenant_name }}"
        method: GET
        body_format: json
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: tenants
      when: jwt_token is defined

    - name: Set Tenant Exists and Id Variables
      set_fact:
        thingsboard_tenant_exists: "{{ tenants.content | from_json | json_query(filter_tenants) | length > 0 }}"
        thingsboard_tenant_id: >-
          {{
            (tenants.content | from_json | json_query(filter_thingsboard_tenant_id) | first)
            if (tenants.content | from_json | json_query(filter_tenants) | length > 0)
            else None
          }}
      vars:
        filter_tenants: "data"
        filter_thingsboard_tenant_id: "data[*].id.id"
      when: tenants is defined

    - name: Create Thingsboard Tenant
      uri:
        url: "{{ thingsboard_url }}/api/tenant"
        method: POST
        body_format: json
        body: 
          additionalInfo:
            tenant-id: "{{ tenant_id }}"
          country:
          state:
          city:
          address:
          address2:
          zip:
          phone:
          email:
          title: "{{ tenant_name }}"
          region: Global
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: created_tenant
      when: thingsboard_tenant_exists == false

    - name: Set Tenant Id Variables
      set_fact:
        thingsboard_tenant_id: "{{ created_tenant.json.id.id }}"
      when: created_tenant is defined and thingsboard_tenant_exists == false

    - name: Add/Update Keycloak Tenant Admin Group
      community.general.keycloak_group:
        name: "{{ tenant_name }}-admins"
        realm: "{{ keycloak_realm }}"
        state: present
        auth_client_id: admin-cli
        auth_keycloak_url: "{{ keycloak_url }}"
        auth_realm: master
        auth_username: "{{ keycloak_username }}"
        auth_password: "{{ keycloak_password }}"
        attributes:
          tenant-id: "{{ tenant_id }}"
          thingsboard-tenant-id: "{{ thingsboard_tenant_id }}"
      register: tenant_admin_group
      delegate_to: localhost

    - name: Get Thingsboard Admin User
      uri:
        url: "{{ thingsboard_url }}/api/tenant/{{ thingsboard_tenant_id }}/users?textSearch={{ tenant_admin_user }}&pageSize=1&page=0"
        method: GET
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: admin_user

    - name: Set Tenant Admin Exists and Id
      set_fact:
        admin_user_exists: "{{ admin_user.content | from_json | json_query(filter_admins) | length > 0 }}"
        admin_user_id: "{{ (admin_user.content | from_json | json_query(filter_admin_user)) if (admin_user.content | from_json | json_query(filter_admins) | length > 0) else None }}"
      vars:
        filter_admins: "data"
        filter_admin_user: "data[0].id.id"

    - name: Create Thingsboard Admin User
      uri:
        url: "{{ thingsboard_url }}/api/user?sendActivationMail=false"
        method: POST
        body_format: json
        body: 
          tenantId:
            id: "{{ thingsboard_tenant_id }}"
            entityType: TENANT
          email: "{{ tenant_admin_user }}"
          authority: TENANT_ADMIN
          additionalInfo: {}
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: created_user
      when: admin_user_exists == false

    - name: Set Tenant Admin
      set_fact:
        admin_user_id: "{{ created_user.json.id.id }}"
      when: created_user is defined and admin_user_exists == false

    - name: Get Thingsboard Admin Token
      uri:
        url: "{{ thingsboard_url }}/api/user/{{ admin_user_id }}/token"
        method: GET
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: admin_tokenset

    - name: Import Rule Chains
      uri:
        url: "{{ thingsboard_url }}/api/ruleChains/import?overwrite=true"
        method: POST
        body_format: json
        body: 
          ruleChains:
          - id:
              entityType: RULE_CHAIN
              id: 39822a40-3ab8-11ef-b4c5-3f775d85e6fa
            createdTime: 1705272918187
            additionalInfo: 
            tenantId: 
            name: Root Rule Chain
            type: CORE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: 13678e20-3ab5-11ef-b4c5-3f775d85e6fa
            root: true
            debugMode: false
            configuration: 
            externalId: 
          - id:
              entityType: RULE_CHAIN
              id: 39822a41-3ab8-11ef-b4c5-3f775d85e6fa
            createdTime: 1705272918284
            additionalInfo: 
            tenantId: 
            name: Edge Root Rule Chain
            type: EDGE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: 136f2f40-3ab5-11ef-b4c5-3f775d85e6fa
            root: false
            debugMode: false
            configuration: 
            externalId: 
          - id:
              entityType: RULE_CHAIN
              id: 39822a42-3ab8-11ef-b4c5-3f775d85e6fa
            createdTime: 1697661800067
            additionalInfo:
              description: ''
            tenantId: 
            name: Thing Registry Sync
            type: CORE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: 13774590-3ab5-11ef-b4c5-3f775d85e6fa
            root: false
            debugMode: false
            configuration: 
            externalId: 
          metadata:
          - ruleChainId:
              entityType: RULE_CHAIN
              id: 39822a40-3ab8-11ef-b4c5-3f775d85e6fa
            firstNodeIndex: 6
            nodes:
            - id: 
              createdTime: 1720173486073
              additionalInfo:
                description: 
                layoutX: 824
                layoutY: 156
              ruleChainId: 
              type: org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode
              name: Save Timeseries
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                defaultTTL: 0
              externalId: 
            - id: 
              createdTime: 1720173486075
              additionalInfo:
                layoutX: 825
                layoutY: 52
              ruleChainId: 
              type: org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode
              name: Save Client Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 2
              configuration:
                scope: CLIENT_SCOPE
                notifyDevice: false
                updateAttributesOnlyOnValueChange: false
                sendAttributesUpdatedNotification: false
              externalId: 
            - id: 
              createdTime: 1720173486076
              additionalInfo:
                description: 
                layoutX: 347
                layoutY: 149
              ruleChainId: 
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Message Type Switch
              debugMode: true
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId: 
            - id: 
              createdTime: 1720173486077
              additionalInfo:
                layoutX: 825
                layoutY: 266
              ruleChainId: 
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log RPC from Device
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId: 
            - id: 
              createdTime: 1720173486079
              additionalInfo:
                layoutX: 825
                layoutY: 379
              ruleChainId: 
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log Other
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId: 
            - id: 
              createdTime: 1720173486080
              additionalInfo:
                layoutX: 825
                layoutY: 468
              ruleChainId: 
              type: org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode
              name: RPC Call Request
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                timeoutInSeconds: 60
              externalId: 
            - id: 
              createdTime: 1720173486082
              additionalInfo:
                description: Process incoming messages from devices with the alarm rules defined
                  in the device profile. Dispatch all incoming messages with "Success" relation
                  type.
                layoutX: 204
                layoutY: 240
              ruleChainId: 
              type: org.thingsboard.rule.engine.profile.TbDeviceProfileNode
              name: Device Profile Node
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                persistAlarmRulesState: false
                fetchAlarmRulesStateOnStart: false
              externalId: 
            - id: 
              createdTime: 1720173486083
              additionalInfo:
                description: ''
                layoutX: 305
                layoutY: 520
              ruleChainId: 
              type: org.thingsboard.rule.engine.flow.TbRuleChainInputNode
              name: Thing Registry Sync
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                ruleChainId: 39822a42-3ab8-11ef-b4c5-3f775d85e6fa
              externalId: 
            connections:
            - fromIndex: 2
              toIndex: 0
              type: Post telemetry
            - fromIndex: 2
              toIndex: 1
              type: Post attributes
            - fromIndex: 2
              toIndex: 3
              type: RPC Request from Device
            - fromIndex: 2
              toIndex: 4
              type: Other
            - fromIndex: 2
              toIndex: 5
              type: RPC Request to Device
            - fromIndex: 2
              toIndex: 7
              type: Attributes Deleted
            - fromIndex: 2
              toIndex: 7
              type: Attributes Updated
            - fromIndex: 2
              toIndex: 7
              type: Entity Assigned
            - fromIndex: 2
              toIndex: 7
              type: Entity Deleted
            - fromIndex: 2
              toIndex: 7
              type: Entity Unassigned
            - fromIndex: 2
              toIndex: 7
              type: Post attributes
            - fromIndex: 6
              toIndex: 2
              type: Success
            ruleChainConnections: 
          - ruleChainId:
              entityType: RULE_CHAIN
              id: 39822a41-3ab8-11ef-b4c5-3f775d85e6fa
            firstNodeIndex: 0
            nodes:
            - id: 
              createdTime: 1720173486132
              additionalInfo:
                description: Process incoming messages from devices with the alarm rules defined
                  in the device profile. Dispatch all incoming messages with "Success" relation
                  type.
                layoutX: 187
                layoutY: 468
              ruleChainId: 
              type: org.thingsboard.rule.engine.profile.TbDeviceProfileNode
              name: Device Profile Node
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                persistAlarmRulesState: false
                fetchAlarmRulesStateOnStart: false
              externalId: 
            - id: 
              createdTime: 1720173486134
              additionalInfo:
                layoutX: 823
                layoutY: 157
              ruleChainId: 
              type: org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode
              name: Save Timeseries
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                defaultTTL: 0
              externalId: 
            - id: 
              createdTime: 1720173486135
              additionalInfo:
                layoutX: 824
                layoutY: 52
              ruleChainId: 
              type: org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode
              name: Save Client Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 2
              configuration:
                scope: CLIENT_SCOPE
                notifyDevice: false
                updateAttributesOnlyOnValueChange: false
                sendAttributesUpdatedNotification: false
              externalId: 
            - id: 
              createdTime: 1720173486136
              additionalInfo:
                layoutX: 347
                layoutY: 149
              ruleChainId: 
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Message Type Switch
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId: 
            - id: 
              createdTime: 1720173486137
              additionalInfo:
                layoutX: 825
                layoutY: 266
              ruleChainId: 
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log RPC from Device
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId: 
            - id: 
              createdTime: 1720173486138
              additionalInfo:
                layoutX: 824
                layoutY: 378
              ruleChainId: 
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log Other
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId: 
            - id: 
              createdTime: 1720173486140
              additionalInfo:
                layoutX: 824
                layoutY: 466
              ruleChainId: 
              type: org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode
              name: RPC Call Request
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                timeoutInSeconds: 60
              externalId: 
            - id: 
              createdTime: 1720173486141
              additionalInfo:
                layoutX: 1126
                layoutY: 104
              ruleChainId: 
              type: org.thingsboard.rule.engine.edge.TbMsgPushToCloudNode
              name: Push to cloud
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scope: SERVER_SCOPE
              externalId: 
            - id: 
              createdTime: 1720173486142
              additionalInfo:
                layoutX: 826
                layoutY: 601
              ruleChainId: 
              type: org.thingsboard.rule.engine.edge.TbMsgPushToCloudNode
              name: Push to cloud
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scope: SERVER_SCOPE
              externalId: 
            connections:
            - fromIndex: 0
              toIndex: 3
              type: Success
            - fromIndex: 1
              toIndex: 7
              type: Success
            - fromIndex: 2
              toIndex: 7
              type: Success
            - fromIndex: 3
              toIndex: 1
              type: Post telemetry
            - fromIndex: 3
              toIndex: 2
              type: Post attributes
            - fromIndex: 3
              toIndex: 4
              type: RPC Request from Device
            - fromIndex: 3
              toIndex: 5
              type: Other
            - fromIndex: 3
              toIndex: 6
              type: RPC Request to Device
            - fromIndex: 3
              toIndex: 8
              type: Attributes Deleted
            - fromIndex: 3
              toIndex: 8
              type: Attributes Updated
            ruleChainConnections: 
          - ruleChainId:
              entityType: RULE_CHAIN
              id: 39822a42-3ab8-11ef-b4c5-3f775d85e6fa
            firstNodeIndex: 2
            nodes:
            - id: 
              createdTime: 1720173486182
              additionalInfo:
                description: ''
                layoutX: 28
                layoutY: 442
              ruleChainId: 
              type: org.thingsboard.rule.engine.metadata.TbFetchDeviceCredentialsNode
              name: Add Credentials
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                fetchTo: METADATA
              externalId: 
            - id: 
              createdTime: 1720173486183
              additionalInfo:
                description: ''
                layoutX: 321
                layoutY: 443
              ruleChainId: 
              type: org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode
              name: Add Originator
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                ignoreNullStrings: false
                dataMapping:
                  name: originatorName
                  type: originatorType
                  id: originatorId
                fetchTo: METADATA
              externalId: 
            - id: 
              createdTime: 1720173486185
              additionalInfo:
                description: ''
                layoutX: 300
                layoutY: 152
              ruleChainId: 
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Filter Messag Type
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId: 
            - id: 
              createdTime: 1720173486187
              additionalInfo:
                description: ''
                layoutX: 900
                layoutY: 152
              ruleChainId: 
              type: org.thingsboard.rule.engine.filter.TbJsFilterNode
              name: Filter Thing Model
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: JS
                jsScript: |-
                  if((msgType === "ATTRIBUTES_UPDATED" || msgType === "POST_ATTRIBUTES_REQUEST") && msg['thing-model'] !== undefined) {
                      return true;
                  } else if(msgType === "ATTRIBUTES_DELETED" && msg.attributes.includes('thing-model')) {
                      return true;
                  }

                  return false;
                tbelScript: return msg.temperature > 20;
              externalId: 
            - id: 
              createdTime: 1720173486188
              additionalInfo:
                description: ''
                layoutX: 864
                layoutY: 307
              ruleChainId: 
              type: org.thingsboard.rule.engine.transform.TbTransformMsgNode
              name: Add Metadata
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: JS
                jsScript: |-
                  metadata.messageType = msgType;
                  metadata.tenant_id = "{{ tenant_id }}";
                  return {msg: msg, metadata: metadata, msgType: msgType};
                tbelScript: 'return {msg: msg, metadata: metadata, msgType: msgType};'
              externalId: 
            - id: 
              createdTime: 1720173486189
              additionalInfo:
                description: ''
                layoutX: 610
                layoutY: 441
              ruleChainId: 
              type: org.thingsboard.rule.engine.metadata.TbGetAttributesNode
              name: Add Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                tellFailureIfAbsent: false
                clientAttributeNames:
                - thing-model
                - thing-metadata
                sharedAttributeNames:
                - thing-model
                - thing-metadata
                serverAttributeNames:
                - thing-model
                - thing-metadata
                latestTsKeyNames: []
                getLatestValueWithTs: false
                fetchTo: DATA
              externalId: 
            - id: 
              createdTime: 1720173486190
              additionalInfo:
                description: ''
                layoutX: 881
                layoutY: 439
              ruleChainId: 
              type: org.thingsboard.rule.engine.metadata.TbGetCustomerDetailsNode
              name: Add Customer Details
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                detailsList:
                - ID
                fetchTo: METADATA
              externalId: 
            - id: 
              createdTime: 1720173486193
              additionalInfo:
                description: ''
                layoutX: 1221
                layoutY: 436
              ruleChainId: 
              type: org.thingsboard.rule.engine.kafka.TbKafkaNode
              name: Push to Kafka
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                topicPattern: thing-describer
                keyPattern: 
                bootstrapServers: "{{ thing_desciber_kafka_servers }}"
                retries: 0
                batchSize: 16384
                linger: 0
                bufferMemory: 33554432
                acks: "-1"
                keySerializer: org.apache.kafka.common.serialization.StringSerializer
                valueSerializer: org.apache.kafka.common.serialization.StringSerializer
                otherProperties: {}
                addMetadataKeyValuesAsKafkaHeaders: true
                kafkaHeadersCharset: UTF-8
              externalId: 
            connections:
            - fromIndex: 0
              toIndex: 1
              type: Success
            - fromIndex: 1
              toIndex: 5
              type: Success
            - fromIndex: 2
              toIndex: 0
              type: Entity Assigned
            - fromIndex: 2
              toIndex: 0
              type: Entity Unassigned
            - fromIndex: 2
              toIndex: 3
              type: Attributes Deleted
            - fromIndex: 2
              toIndex: 3
              type: Attributes Updated
            - fromIndex: 2
              toIndex: 3
              type: Post attributes
            - fromIndex: 2
              toIndex: 4
              type: Entity Deleted
            - fromIndex: 3
              toIndex: 0
              type: 'True'
            - fromIndex: 4
              toIndex: 6
              type: Success
            - fromIndex: 5
              toIndex: 4
              type: Success
            - fromIndex: 6
              toIndex: 7
              type: Failure
            - fromIndex: 6
              toIndex: 7
              type: Success
            ruleChainConnections: 
        headers:
          X-Authorization: "Bearer {{ admin_tokenset.json.token }}"
        status_code: 200
        return_content: yes
      when: 
      - admin_tokenset is defined