---
- name: Initialize Thingsboard
  hosts: localhost
  vars:
    thingsboard_url: "{{ lookup('env', 'THINGSBOARD_URL') }}"
    sysadmin_username: "{{ lookup('env', 'SYSADMIN_USERNAME') }}"
    sysadmin_password: "{{ lookup('env', 'SYSADMIN_PASSWORD') }}"
    token_signing_key: "{{ lookup('env', 'JWT_SIGNING_KEY') }}"
    tenant_name: "{{ lookup('env', 'TENANT_NAME') }}"
    tenant_admin_user: "{{ lookup('env', 'TENANT_ADMIN_USER', default='default-setup-admin@local.de') }}"
    fuseki_username: "{{ lookup('env', 'FUSEKI_USERNAME') }}"
    fuseki_password: "{{ lookup('env', 'FUSEKI_PASSWORD') }}"
    fuseki_url: "{{ lookup('env', 'FUSEKI_URL') }}"
    thing_desciber_kafka_servers: "{{ lookup('env', 'THING_DESCRIBER_KAFKA_SERVERS') }}"
    oauth2_endpoint_scheme: "{{ lookup('env', 'OAUTH2_SCHEME') }}"
    oauth2_domain_name: "{{ lookup('env', 'OAUTH2_DOMAIN_NAME') }}"
    oauth2_customer_mapper_url: "{{ lookup('env', 'OAUTH2_CUSTOM_MAPPER_URL') }}"
    oauth2_client_id: "{{ lookup('env', 'OAUTH2_CLIENT_ID') }}"
    oauth2_client_secret: "{{ lookup('env', 'OAUTH2_CLIENT_SECRET') }}"
    oauth2_authorization_uri: "{{ lookup('env', 'OAUTH2_AUTHORIZATION_URI') }}"
    oauth2_access_token_uri: "{{ lookup('env', 'OAUTH2_ACCESS_TOKEN_URI') }}"
    oauth2_user_info_uri: "{{ lookup('env', 'OAUTH2_USER_INFO_URI') }}"
    oauth2_jwk_uri: "{{ lookup('env', 'OAUTH2_JWK_URI') }}"
    oauth2_login_button_label: "{{ lookup('env', 'OAUTH2_LOGIN_BUTTON_LABEL') }}"
    oauth2_user_creation: "{{ lookup('env', 'OAUTH2_USER_CREATION') }}"
    oauth2_activate_user: "{{ lookup('env', 'OAUTH2_ACTIVATE_USER') }}"
  tasks:
    - name: Authenticate and get JWT token
      uri:
        url: "{{ thingsboard_url }}/api/auth/login"
        method: POST
        body_format: json
        body: 
          username: "{{ sysadmin_username }}"
          password: "{{ sysadmin_password }}"
        return_content: yes
      register: auth_response

    - name: Extract JWT token
      set_fact:
        jwt_token: "{{ auth_response.json.token }}"
      when: auth_response.json.token is defined

    - name: Change token signing key
      uri:
        url: "{{ thingsboard_url }}/api/admin/jwtSettings"
        method: POST
        body_format: json
        body: 
          tokenSigningKey: "{{ token_signing_key | b64encode }}"
          tokenExpirationTime: 9000
          refreshTokenExpTime: 604800
          tokenIssuer: "thingsboard.io"
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: change_key_response
      when: jwt_token is defined

    - name: Fetching OAuth Settings
      uri:
        url: "{{ thingsboard_url }}/api/oauth2/config"
        method: GET
        headers:
            X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: oauth2_settings_response

    - name: Check if domain was already added
      set_fact:
        oauth2_settings_exists: "{{ oauth2_settings_response.content | from_json | json_query(filter_domain_infos) | length > 0 }}"
        oauth2_params_infos: "{{ oauth2_settings_response.content | from_json | json_query(get_oauth2_params_infos) }}"
      vars:
        filter_domain_infos: "oauth2ParamsInfos[*].domainInfos[?name==`thingsboard.mvp-ds.dev-prd01.fsn.iotx.materna.work`]"
        get_oauth2_params_infos: "oauth2ParamsInfos[*]"

    - name: Creating Endpoint Information
      set_fact:
        new_oauth2_endpoint:
          domainInfos:
          - scheme: "{{ oauth2_endpoint_scheme }}"
            name: "{{ oauth2_domain_name }}"
          mobileInfos: []
          clientRegistrations:
          - mapperConfig:
              allowUserCreation: "{{ oauth2_user_creation | bool }}"
              activateUser: "{{ oauth2_activate_user | bool }}"
              type: CUSTOM
              custom:
                url: "{{ oauth2_customer_mapper_url }}"
                sendToken: true
            clientId: "{{ oauth2_client_id }}"
            clientSecret: "{{ oauth2_client_secret }}"
            authorizationUri: "{{ oauth2_authorization_uri }}"
            accessTokenUri: "{{ oauth2_access_token_uri }}"
            userInfoUri: "{{ oauth2_user_info_uri }}"
            jwkSetUri: "{{ oauth2_jwk_uri }}"
            scope:
            - email
            - openid
            - profile
            userNameAttributeName: email
            clientAuthenticationMethod: POST
            loginButtonLabel: "{{ oauth2_login_button_label }}"
            loginButtonIcon:
            platforms: []
            additionalInfo:
              providerName: Custom
      when: oauth2_settings_exists == false

    - name: Add oauth2 config
      vars:
        combined_oauth2_params_infos: "{{ oauth2_params_infos + [new_oauth2_endpoint] }}"
      uri:
        url: "{{ thingsboard_url }}/api/oauth2/config"
        method: POST
        body_format: json
        body: 
          enabled: true
          oauth2ParamsInfos: "{{ combined_oauth2_params_infos }}"
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      when: oauth2_settings_exists == false

    - name: Get tenants
      uri:
        url: "{{ thingsboard_url }}/api/tenantInfos?page=0&pageSize=1&textSearch={{ tenant_name }}"
        method: GET
        body_format: json
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: tenants
      when: auth_response.json.token is defined

    - name: Check tenants
      set_fact:
        tenant_exists: "{{ tenants.content | from_json | json_query(filter_tenants) | length == 1 }}"
      vars:
        filter_tenants: "data[?title==`{{ tenant_name }}`]"
        filter_tenant_id: "data[?title==`{{ tenant_name }}`].id.id"
      when: tenants is defined

    - name: Create tenant
      uri:
        url: "{{ thingsboard_url }}/api/tenant"
        method: POST
        body_format: json
        body: 
          additionalInfo:
          country:
          state:
          city:
          address:
          address2:
          zip:
          phone:
          email:
          title: "{{ tenant_name }}"
          region: Global
          name: "{{ tenant_name }}"
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: created_tenant
      when: tenant_exists == false

    - name: Create admin user
      vars:
        tenant_id: "{{ created_tenant.json.id.id }}"
      uri:
        url: "{{ thingsboard_url }}/api/user?sendActivationMail=false"
        method: POST
        body_format: json
        body: 
          tenantId:
            id: "{{ tenant_id }}"
            entityType: TENANT
          email: "{{ tenant_admin_user }}"
          authority: TENANT_ADMIN
          additionalInfo: {}
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: created_user
      when: tenant_exists == false

    - name: Get admin token
      vars: 
        user_id: "{{ created_user.json.id.id }}"
      uri:
        url: "{{ thingsboard_url }}/api/user/{{ user_id }}/token"
        method: GET
        headers:
          X-Authorization: "Bearer {{ jwt_token }}"
        status_code: 200
        return_content: yes
      register: admin_tokenset
      when: 
      - created_user is defined
      - tenant_exists == false

    - name: Import rule chains
      uri:
        url: "{{ thingsboard_url }}/api/ruleChains/import?overwrite=true"
        method: POST
        body_format: json
        body: 
          ruleChains:
          - id:
              entityType: RULE_CHAIN
              id: dee197d0-b3ab-11ee-a06b-2da4a5a81ce2
            createdTime: 1705272918187
            additionalInfo:
            tenantId:
            name: Root Rule Chain
            type: CORE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: fe4ce0b0-b32f-11ee-a06b-2da4a5a81ce2
            root: true
            debugMode: false
            configuration:
            externalId:
          - id:
              entityType: RULE_CHAIN
              id: dee197d1-b3ab-11ee-a06b-2da4a5a81ce2
            createdTime: 1705272918284
            additionalInfo:
            tenantId:
            name: Edge Root Rule Chain
            type: EDGE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: fe79bd10-b32f-11ee-a06b-2da4a5a81ce2
            root: true
            debugMode: false
            configuration:
            externalId:
          - id:
              entityType: RULE_CHAIN
              id: dee197d2-b3ab-11ee-a06b-2da4a5a81ce2
            createdTime: 1697661800067
            additionalInfo:
              description: ''
            tenantId:
            name: Thing Registry Sync
            type: CORE
            firstRuleNodeId:
              entityType: RULE_NODE
              id: feaa9110-b32f-11ee-a06b-2da4a5a81ce2
            root: false
            debugMode: false
            configuration:
            externalId:
          metadata:
          - ruleChainId:
              entityType: RULE_CHAIN
              id: dee197d0-b3ab-11ee-a06b-2da4a5a81ce2
            firstNodeIndex: 6
            nodes:
            - id:
              createdTime: 1705272920617
              additionalInfo:
                description:
                layoutX: 824
                layoutY: 156
              ruleChainId:
              type: org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode
              name: Save Timeseries
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                defaultTTL: 0
              externalId:
            - id:
              createdTime: 1705272920620
              additionalInfo:
                layoutX: 825
                layoutY: 52
              ruleChainId:
              type: org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode
              name: Save Client Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 2
              configuration:
                scope: CLIENT_SCOPE
                notifyDevice: false
                updateAttributesOnlyOnValueChange: false
                sendAttributesUpdatedNotification: false
              externalId:
            - id:
              createdTime: 1705272920624
              additionalInfo:
                description:
                layoutX: 347
                layoutY: 149
              ruleChainId:
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Message Type Switch
              debugMode: true
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId:
            - id:
              createdTime: 1705272920627
              additionalInfo:
                layoutX: 825
                layoutY: 266
              ruleChainId:
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log RPC from Device
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId:
            - id:
              createdTime: 1705272920630
              additionalInfo:
                layoutX: 825
                layoutY: 379
              ruleChainId:
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log Other
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId:
            - id:
              createdTime: 1705272920633
              additionalInfo:
                layoutX: 825
                layoutY: 468
              ruleChainId:
              type: org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode
              name: RPC Call Request
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                timeoutInSeconds: 60
              externalId:
            - id:
              createdTime: 1705272920635
              additionalInfo:
                description: Process incoming messages from devices with the alarm rules defined
                  in the device profile. Dispatch all incoming messages with "Success" relation
                  type.
                layoutX: 204
                layoutY: 240
              ruleChainId:
              type: org.thingsboard.rule.engine.profile.TbDeviceProfileNode
              name: Device Profile Node
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                persistAlarmRulesState: false
                fetchAlarmRulesStateOnStart: false
              externalId:
            - id:
              createdTime: 1705272920638
              additionalInfo:
                description: ''
                layoutX: 305
                layoutY: 520
              ruleChainId:
              type: org.thingsboard.rule.engine.flow.TbRuleChainInputNode
              name: Thing Registry Sync
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                ruleChainId: dee197d2-b3ab-11ee-a06b-2da4a5a81ce2
              externalId:
            connections:
            - fromIndex: 2
              toIndex: 0
              type: Post telemetry
            - fromIndex: 2
              toIndex: 1
              type: Post attributes
            - fromIndex: 2
              toIndex: 3
              type: RPC Request from Device
            - fromIndex: 2
              toIndex: 4
              type: Other
            - fromIndex: 2
              toIndex: 5
              type: RPC Request to Device
            - fromIndex: 2
              toIndex: 7
              type: Attributes Deleted
            - fromIndex: 2
              toIndex: 7
              type: Attributes Updated
            - fromIndex: 2
              toIndex: 7
              type: Entity Assigned
            - fromIndex: 2
              toIndex: 7
              type: Entity Deleted
            - fromIndex: 2
              toIndex: 7
              type: Entity Unassigned
            - fromIndex: 2
              toIndex: 7
              type: Post attributes
            - fromIndex: 6
              toIndex: 2
              type: Success
            ruleChainConnections:
          - ruleChainId:
              entityType: RULE_CHAIN
              id: dee197d1-b3ab-11ee-a06b-2da4a5a81ce2
            firstNodeIndex: 0
            nodes:
            - id:
              createdTime: 1705272920929
              additionalInfo:
                description: Process incoming messages from devices with the alarm rules defined
                  in the device profile. Dispatch all incoming messages with "Success" relation
                  type.
                layoutX: 187
                layoutY: 468
              ruleChainId:
              type: org.thingsboard.rule.engine.profile.TbDeviceProfileNode
              name: Device Profile Node
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                persistAlarmRulesState: false
                fetchAlarmRulesStateOnStart: false
              externalId:
            - id:
              createdTime: 1705272920942
              additionalInfo:
                layoutX: 823
                layoutY: 157
              ruleChainId:
              type: org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode
              name: Save Timeseries
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                defaultTTL: 0
              externalId:
            - id:
              createdTime: 1705272920956
              additionalInfo:
                layoutX: 824
                layoutY: 52
              ruleChainId:
              type: org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode
              name: Save Client Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 2
              configuration:
                scope: CLIENT_SCOPE
                notifyDevice: false
                updateAttributesOnlyOnValueChange: false
                sendAttributesUpdatedNotification: false
              externalId:
            - id:
              createdTime: 1705272920963
              additionalInfo:
                layoutX: 347
                layoutY: 149
              ruleChainId:
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Message Type Switch
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId:
            - id:
              createdTime: 1705272920980
              additionalInfo:
                layoutX: 825
                layoutY: 266
              ruleChainId:
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log RPC from Device
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId:
            - id:
              createdTime: 1705272920991
              additionalInfo:
                layoutX: 824
                layoutY: 378
              ruleChainId:
              type: org.thingsboard.rule.engine.action.TbLogNode
              name: Log Other
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: TBEL
                jsScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
                tbelScript: return '\nIncoming message:\n' + JSON.stringify(msg) + '\nIncoming
                  metadata:\n' + JSON.stringify(metadata);
              externalId:
            - id:
              createdTime: 1705272921005
              additionalInfo:
                layoutX: 824
                layoutY: 466
              ruleChainId:
              type: org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode
              name: RPC Call Request
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                timeoutInSeconds: 60
              externalId:
            - id:
              createdTime: 1705272921016
              additionalInfo:
                layoutX: 1126
                layoutY: 104
              ruleChainId:
              type: org.thingsboard.rule.engine.edge.TbMsgPushToCloudNode
              name: Push to cloud
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scope: SERVER_SCOPE
              externalId:
            - id:
              createdTime: 1705272921027
              additionalInfo:
                layoutX: 826
                layoutY: 601
              ruleChainId:
              type: org.thingsboard.rule.engine.edge.TbMsgPushToCloudNode
              name: Push to cloud
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scope: SERVER_SCOPE
              externalId:
            connections:
            - fromIndex: 0
              toIndex: 3
              type: Success
            - fromIndex: 1
              toIndex: 7
              type: Success
            - fromIndex: 2
              toIndex: 7
              type: Success
            - fromIndex: 3
              toIndex: 1
              type: Post telemetry
            - fromIndex: 3
              toIndex: 2
              type: Post attributes
            - fromIndex: 3
              toIndex: 4
              type: RPC Request from Device
            - fromIndex: 3
              toIndex: 5
              type: Other
            - fromIndex: 3
              toIndex: 6
              type: RPC Request to Device
            - fromIndex: 3
              toIndex: 8
              type: Attributes Deleted
            - fromIndex: 3
              toIndex: 8
              type: Attributes Updated
            ruleChainConnections:
          - ruleChainId:
              entityType: RULE_CHAIN
              id: dee197d2-b3ab-11ee-a06b-2da4a5a81ce2
            firstNodeIndex: 3
            nodes:
            - id:
              createdTime: 1705272921216
              additionalInfo:
                description: ''
                layoutX: 29
                layoutY: 392
              ruleChainId:
              type: org.thingsboard.rule.engine.metadata.TbFetchDeviceCredentialsNode
              name: Add Credentials
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                fetchTo: METADATA
              externalId:
            - id:
              createdTime: 1705272921224
              additionalInfo:
                description: ''
                layoutX: 335
                layoutY: 448
              ruleChainId:
              type: org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode
              name: Add Originator
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                ignoreNullStrings: false
                dataMapping:
                  name: originatorName
                  type: originatorType
                  id: originatorId
                fetchTo: METADATA
              externalId:
            - id:
              createdTime: 1705272921241
              additionalInfo:
                description: ''
                layoutX: 1240
                layoutY: 526
              ruleChainId:
              type: org.thingsboard.rule.engine.metadata.TbGetTenantDetailsNode
              name: Add Tenant Details
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                detailsList:
                - TITLE
                - ID
                fetchTo: METADATA
              externalId:
            - id:
              createdTime: 1705272921249
              additionalInfo:
                description: ''
                layoutX: 300
                layoutY: 152
              ruleChainId:
              type: org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode
              name: Filter Messag Type
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                version: 0
              externalId:
            - id:
              createdTime: 1705272921260
              additionalInfo:
                description: ''
                layoutX: 900
                layoutY: 152
              ruleChainId:
              type: org.thingsboard.rule.engine.filter.TbJsFilterNode
              name: Filter Thing Model
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: JS
                jsScript: |-
                  if((msgType === "ATTRIBUTES_UPDATED" || msgType === "POST_ATTRIBUTES_REQUEST") && msg['thing-model'] !== undefined) {
                      return true;
                  } else if(msgType === "ATTRIBUTES_DELETED" && msg.attributes.includes('thing-model')) {
                      return true;
                  }

                  return false;
                tbelScript: return msg.temperature > 20;
              externalId:
            - id:
              createdTime: 1705272921265
              additionalInfo:
                description: ''
                layoutX: 864
                layoutY: 307
              ruleChainId:
              type: org.thingsboard.rule.engine.transform.TbTransformMsgNode
              name: Add Type To Metadata
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: JS
                jsScript: |-
                  metadata.messageType = msgType
                  return {msg: msg, metadata: metadata, msgType: msgType};
                tbelScript: 'return {msg: msg, metadata: metadata, msgType: msgType};'
              externalId:
            - id:
              createdTime: 1705272921273
              additionalInfo:
                description: ''
                layoutX: 632
                layoutY: 495
              ruleChainId:
              type: org.thingsboard.rule.engine.metadata.TbGetAttributesNode
              name: Add Attributes
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                tellFailureIfAbsent: false
                clientAttributeNames:
                - thing-model
                - thing-metadata
                sharedAttributeNames:
                - thing-model
                - thing-metadata
                serverAttributeNames:
                - thing-model
                - thing-metadata
                latestTsKeyNames: []
                getLatestValueWithTs: false
                fetchTo: DATA
              externalId:
            - id:
              createdTime: 1705272921281
              additionalInfo:
                description: ''
                layoutX: 887
                layoutY: 528
              ruleChainId:
              type: org.thingsboard.rule.engine.metadata.TbGetCustomerDetailsNode
              name: Add Customer Details
              debugMode: false
              singletonMode: false
              configurationVersion: 1
              configuration:
                detailsList:
                - ID
                - TITLE
                fetchTo: METADATA
              externalId:
            - id:
              createdTime: 1705272921290
              additionalInfo:
                description: 'Add empty strings if no customer was added. '
                layoutX: 1072
                layoutY: 673
              ruleChainId:
              type: org.thingsboard.rule.engine.transform.TbTransformMsgNode
              name: Add Customer Default Values
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                scriptLang: JS
                jsScript: |-
                  metadata.customer_id = ""
                  metadata.customer_title = ""
                  return {msg: msg, metadata: metadata, msgType: msgType};
                tbelScript: 'return {msg: msg, metadata: metadata, msgType: msgType};'
              externalId:
            - id:
              createdTime: 1705272921297
              additionalInfo:
                description: ''
                layoutX: 1130
                layoutY: 128
              ruleChainId:
              type: org.thingsboard.rule.engine.kafka.TbKafkaNode
              name: Push to Kafka
              debugMode: false
              singletonMode: false
              configurationVersion: 0
              configuration:
                topicPattern: thing-describer
                keyPattern:
                bootstrapServers: "{{ thing_desciber_kafka_servers }}"
                retries: 0
                batchSize: 16384
                linger: 0
                bufferMemory: 33554432
                acks: "-1"
                keySerializer: org.apache.kafka.common.serialization.StringSerializer
                valueSerializer: org.apache.kafka.common.serialization.StringSerializer
                otherProperties: {}
                addMetadataKeyValuesAsKafkaHeaders: true
                kafkaHeadersCharset: UTF-8
              externalId:
            connections:
            - fromIndex: 0
              toIndex: 1
              type: Success
            - fromIndex: 1
              toIndex: 6
              type: Success
            - fromIndex: 2
              toIndex: 9
              type: Success
            - fromIndex: 3
              toIndex: 0
              type: Entity Assigned
            - fromIndex: 3
              toIndex: 0
              type: Entity Unassigned
            - fromIndex: 3
              toIndex: 4
              type: Attributes Deleted
            - fromIndex: 3
              toIndex: 4
              type: Attributes Updated
            - fromIndex: 3
              toIndex: 4
              type: Post attributes
            - fromIndex: 3
              toIndex: 5
              type: Entity Deleted
            - fromIndex: 4
              toIndex: 0
              type: 'True'
            - fromIndex: 5
              toIndex: 7
              type: Success
            - fromIndex: 6
              toIndex: 5
              type: Success
            - fromIndex: 7
              toIndex: 2
              type: Success
            - fromIndex: 7
              toIndex: 8
              type: Failure
            - fromIndex: 8
              toIndex: 2
              type: Success
            ruleChainConnections:
        headers:
          X-Authorization: "Bearer {{ admin_tokenset.json.token }}"
        status_code: 200
        return_content: yes
      when: 
      - admin_tokenset is defined
      - tenant_exists == false